name: Hybrid Selenium and Playwright CI

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      job_name:
        description: 'Choose the job to run (run_selenium, run_playwright, run_tests)'
        required: true
        default: 'run_tests'

jobs:
  run_all:
    if: ${{ github.event.inputs.job_name == 'run_tests' || github.event.inputs.job_name == 'run_selenium' || github.event.inputs.job_name == 'run_playwright' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        engine: [selenium, playwright]
    steps:
      - name: Skip job if engine doesn't match
        if: |
          (github.event.inputs.job_name == 'run_selenium' && matrix.engine != 'selenium') ||
          (github.event.inputs.job_name == 'run_playwright' && matrix.engine != 'playwright')
        run: echo "Skipping this engine"

      - name: Checkout code
        if: |
          (github.event.inputs.job_name == 'run_tests') ||
          (github.event.inputs.job_name == 'run_selenium' && matrix.engine == 'selenium') ||
          (github.event.inputs.job_name == 'run_playwright' && matrix.engine == 'playwright')
        uses: actions/checkout@v3

      - name: Set up Python
        if: always()
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        if: always()
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest
          playwright install

      - name: Run ${{ matrix.engine }} tests with Allure
        if: |
          (github.event.inputs.job_name == 'run_tests') ||
          (github.event.inputs.job_name == 'run_selenium' && matrix.engine == 'selenium') ||
          (github.event.inputs.job_name == 'run_playwright' && matrix.engine == 'playwright')
        run: |
          pytest --engine=${{ matrix.engine }} --alluredir=./reports

      - name: Upload Allure Results
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.engine }}
          path: ./reports

      - name: Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jre wget unzip
          LATEST_VERSION=$(curl -s https://api.github.com/repos/allure-framework/allure2/releases/latest | grep tag_name | cut -d '"' -f 4)
          wget -q -O allure.tgz https://github.com/allure-framework/allure2/releases/download/$LATEST_VERSION/allure-$LATEST_VERSION.tgz
          tar -xzf allure.tgz
          sudo mv allure-$LATEST_VERSION /usr/local/bin/allure
          sudo ln -s /usr/local/bin/allure/bin/allure /usr/bin/allure

      - name: Generate Allure Report
        run: |
          allure generate ./reports --clean -o ./allure-report

      - name: Upload Allure HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ matrix.engine }}
          path: ./allure-report

      - name: Deploy Allure Report to GitHub Pages
        run: |
          JOB_ID=${{ github.run_id }}-${{ matrix.engine }}
          mkdir ~/allure-temp
          cp -a ./allure-report/. ~/allure-temp/

          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git fetch
          git switch gh-pages || git checkout --orphan gh-pages

          mkdir -p ./${{ matrix.engine }}-reports/$JOB_ID
          cp -a ~/allure-temp/. ./${{ matrix.engine }}-reports/$JOB_ID/

          echo "<html><body><h1>${{ matrix.engine }} Reports</h1><ul>" > ${{ matrix.engine }}-reports/index.html
          for dir in $(ls -1 ${{ matrix.engine }}-reports); do
            if [ -d "${{ matrix.engine }}-reports/$dir" ]; then
              echo "<li><a href=\"$dir/index.html\">$dir</a></li>" >> ${{ matrix.engine }}-reports/index.html
            fi
          done
          echo "</ul></body></html>" >> ${{ matrix.engine }}-reports/index.html

          touch .nojekyll
          git add .
          git commit -m "Update Allure report for ${{ matrix.engine }} job $JOB_ID"
          git push origin gh-pages --force
